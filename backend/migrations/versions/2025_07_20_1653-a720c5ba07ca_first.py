"""first

Revision ID: a720c5ba07ca
Revises:
Create Date: 2025-07-20 16:53:30.121700

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "a720c5ba07ca"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "author",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_author_name"), "author", ["name"], unique=True)
    op.create_table(
        "bookcase",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_bookcase_name"), "bookcase", ["name"], unique=True)
    op.create_table(
        "category",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_category_name"), "category", ["name"], unique=True)
    op.create_table(
        "publisher",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_publisher_name"), "publisher", ["name"], unique=True)
    op.create_table(
        "publisheralias",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("publisher_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["publisher_id"],
            ["publisher.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_publisheralias_name"), "publisheralias", ["name"], unique=True
    )
    op.create_table(
        "shelf",
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("bookcase_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bookcase_id"],
            ["bookcase.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "book",
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("subtitle", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("isbn_13", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("isbn_10", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("published_date", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("page_count", sa.Integer(), nullable=True),
        sa.Column("language", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("image_link", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("is_translation", sa.Boolean(), nullable=False),
        sa.Column(
            "original_language", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column(
            "translation_language", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("shelf_id", sa.Integer(), nullable=True),
        sa.Column("publisher_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["publisher_id"],
            ["publisher.id"],
        ),
        sa.ForeignKeyConstraint(
            ["shelf_id"],
            ["shelf.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_book_isbn_10"), "book", ["isbn_10"], unique=True)
    op.create_index(op.f("ix_book_isbn_13"), "book", ["isbn_13"], unique=True)
    op.create_table(
        "bookauthorlink",
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["author.id"],
        ),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["book.id"],
        ),
        sa.PrimaryKeyConstraint("book_id", "author_id"),
    )
    op.create_table(
        "bookcategorylink",
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["book.id"],
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.PrimaryKeyConstraint("book_id", "category_id"),
    )
    op.create_table(
        "booktranslatorlink",
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["author.id"],
        ),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["book.id"],
        ),
        sa.PrimaryKeyConstraint("book_id", "author_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("booktranslatorlink")
    op.drop_table("bookcategorylink")
    op.drop_table("bookauthorlink")
    op.drop_index(op.f("ix_book_isbn_13"), table_name="book")
    op.drop_index(op.f("ix_book_isbn_10"), table_name="book")
    op.drop_table("book")
    op.drop_table("shelf")
    op.drop_index(op.f("ix_publisheralias_name"), table_name="publisheralias")
    op.drop_table("publisheralias")
    op.drop_index(op.f("ix_publisher_name"), table_name="publisher")
    op.drop_table("publisher")
    op.drop_index(op.f("ix_category_name"), table_name="category")
    op.drop_table("category")
    op.drop_index(op.f("ix_bookcase_name"), table_name="bookcase")
    op.drop_table("bookcase")
    op.drop_index(op.f("ix_author_name"), table_name="author")
    op.drop_table("author")
    # ### end Alembic commands ###
